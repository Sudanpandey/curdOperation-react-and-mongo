{"version":3,"file":"static/webpack/static/development/pages/abc.js.a22bc72af8ee9a791acb.hot-update.js","sources":["webpack:///./pages/abc.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport axios from \"axios\";\n\nimport {\n  Box,\n  Input,\n  Button,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\n\nconst formValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"Name is required\"),\n  mobile: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .min(6, \"Password has to be longer than 6 characters!\")\n    .required(\"Valid password  is required\"),\n  email: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"Email is required\"),\n  age: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"Age  is required\"),\n  bloodgroup: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"blood group is required\"),\n  address: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(25, \"Too Long!\")\n    .required(\"Address is required\"),\n});\n\nconst initialValues = {\n  name: \"\",\n  mobile: \"\",\n  email: \"\",\n  age: \"\",\n  bloodgroup: \"\",\n  address: \"\",\n};\n\nconst index = () => {\n  // For View data \n  const [students, seStudents] = useState([]);\n\n  const getData = async () => {\n    try {\n      const {data: { data }, } = await axios.get(\"http://localhost:3000\");\n      // const response = await axios.get(\"http://localhost:3000\");\n      // const data = response.data.data;\n     \n      seStudents(data);\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addData = async (values) => {\n    try {\n      await axios.post(\"http://localhost:3000\", values);\n      getData();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  useEffect()\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={formValidationSchema}\n      onSubmit={(values) => {\n        addData(values);\n      }}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        errors,\n        touched,\n      }) => {\n        // console.log(errors);\n        return (\n          <form onSubmit={handleSubmit}>\n            <div>\n              <Box\n                style={{\n                  height: \"auto\",\n                  width: \"90%\",\n                  backgroundColor: \"white\",\n                  marginLeft: \"60px\",\n                  marginTop: \"30px\",\n                  boxShadow: \"  1px 4px  7px 5px #E5E5E5\",\n                }}\n              >\n                <Box style={{ display: \"flex\" }}>\n                  <Box\n                    style={{\n                      flex: 2,\n                      padding: \"0px 20px\",\n                      height: \"100%\",\n                      backgroundColor: \"white\",\n                    }}\n                  >\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"spacebetween\",\n                      }}\n                    >\n                      <Box>\n                        <Input\n                          name=\"name\"\n                          value={values.name}\n                          onChange={handleChange}\n                          type=\"text\"\n                          placeholder=\"Full Name \"\n                          disableUnderline={true}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                            border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.name && errors.name}\n                        </Typography>\n                      </Box>\n\n                      <Box>\n                        <Input\n                          name=\"mobile\"\n                          value={values.mobile}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          type=\"number\"\n                          placeholder=\"Mobile No \"\n                          disableUnderline={true}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                            border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.mobile && errors.mobile}\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"spacebetween\",\n                      }}\n                    >\n                      <Box>\n                        <Input\n                          name=\"email\"\n                          value={values.email}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          type=\"text\"\n                          placeholder=\"Email \"\n                          disableUnderline={true}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                          border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.email && errors.email}     \n                        </Typography>\n                      </Box>\n                      <Box>\n                        <Input\n                          name=\"age\"\n                          value={values.age}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          type=\"number\"\n                          placeholder=\"Age \"\n                          disableUnderline={true}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                            border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.age && errors.age}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"spacebetween\",\n                      }}\n                    >\n                      <Box>\n                        <Input\n                          name=\"bloodgroup\"\n                          value={values.bloodgroup}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          type=\"text\"\n                          placeholder=\"Blood Group\"\n                          disableUnderline={true}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                            border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.bloodgroup && errors.bloodgroup}\n                        </Typography>\n                      </Box>\n                      <Box>\n                        <Input\n                          name=\"address\"\n                          value={values.address}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          type=\"text\"\n                          placeholder=\"Address \"\n                          disableUnderline={true}\n                          style={{\n                            borderRadius: \"4px\",\n                            marginTop: \"20px\",\n                            backgroundColor: \"#F1F1F1\",\n                            marginRight: \"20px\",\n                            padding: \"10px\",\n                            border: \"1px solid  #E5E5E5 \",\n                          }}\n                        ></Input>\n                        <Typography style={{ fontSize: 12, color: \"red\" }}>\n                          {touched.address && errors.address}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Box\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-around\",\n                      }}\n                    >\n                      <Button\n                        style={{\n                          marginTop: \"40px\",\n                          padding: \"10px\",\n                          marginBottom: \"20px\",\n                        }}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        type=\"submit\"\n                      >\n                        Submit\n                      </Button>\n                      <Button\n                        style={{\n                          marginTop: \"40px\",\n                          padding: \"10px\",\n                          marginBottom: \"20px\",\n                          backgroundColor: \"#898895\",\n                        }}\n                        variant=\"contained\"\n                        color=\"black\"\n                        backgroundColor=\"#898895\"\n                       \n                      >\n                        Reset\n                      </Button>\n                    </Box>\n                  </Box>\n                  <Box\n                    style={{\n                      flex: 2,\n                      padding: \"0px 20px\",\n                      height: \"100%\",\n                      backgroundColor: \"green\",\n                    }}\n                  > \n                    {/* Fetch data from the database and show the table  */}\n                    <Box>\n                      <TableContainer\n                        component={Paper}\n                        style={{\n                          marginTop: \"30px\",\n                          marginLeft: \"20px\",\n                          marginRight: \"20px\",\n                          marginBottom: \"30px\",\n                          width: \"95%\",\n                        }}\n                      >\n                        <Table\n                          size=\"small\"\n                          aria-label=\"a dense table\"\n                          style={{ width: \"600px\" }}\n                        >\n                          <TableHead>\n                            <TableRow>\n                              <TableCell align=\"center\">Name</TableCell>\n                              <TableCell align=\"center\">Mobile</TableCell>\n                              <TableCell align=\"center\">Email</TableCell>\n                              <TableCell align=\"center\">Blood</TableCell>\n                              <TableCell align=\"center\">Age</TableCell>\n                              <TableCell align=\"center\">Address</TableCell>\n                              <TableCell align=\"center\">Action</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {students.map((row) => (\n                              <TableRow key={row.id}>\n                                <TableCell align=\"center\">{row.name}</TableCell>\n                                <TableCell align=\"center\">\n                                  {row.mobile}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {row.email}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {row.bloodgroup}\n                                </TableCell>\n                                <TableCell align=\"center\">{row.age}</TableCell>\n                                <TableCell align=\"center\">\n                                  {row.address}\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  <Button onClick={() => deleteData(row.name)}>\n                                    <DeleteIcon />\n                                  </Button>\n                                  <Button\n                                    onClick={() => setSelectedStudent(row)}\n                                  >\n                                    <EditIcon />\n                                  </Button>\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                    </Box>\n                  \n     \n                    {/* Table part end  */}\n                  </Box>\n                </Box>\n              </Box>\n            </div>\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\nexport default index;"],"mappings":"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","sourceRoot":""}